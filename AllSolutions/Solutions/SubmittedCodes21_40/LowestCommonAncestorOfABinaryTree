/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

TreeNode* LCA(TreeNode* root, TreeNode* p, TreeNode* q)
{
    //eg. 7,0
    if(root == NULL)
    {
        return NULL;
    }

    if(root->val == p->val || root->val == q->val)
    {
        return root;
    }

    TreeNode* left = LCA(root->left,p,q);
    TreeNode* right = LCA(root->right,p,q);

    if(left == NULL && right == NULL)
    {
        return NULL;
    }
    else if (left != NULL && right == NULL)
    {
        return left;
    }
    else if (left == NULL && right != NULL)
    {
        return right;
    }
    else
    {
        return root;
    }
}
class Solutions.Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {

        return LCA(root,p,q);

    }
};