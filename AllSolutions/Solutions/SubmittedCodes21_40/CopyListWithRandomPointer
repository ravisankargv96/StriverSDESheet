/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;

    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solutions.Solution {
public:
    Node* copyRandomList(Node* head) {

        unordered_map<int,Node*> clonempp;
        unordered_map<Node*,int> orgmpp;

        Node* dummy = new Node(-1);
        Node* curr = dummy;

        Node* temp = head;
        int cnt = 0;

        while(temp != NULL)
        {
            curr->next = new Node(temp->val);
            curr = curr->next;

            clonempp[cnt] = curr;
            orgmpp[temp] = cnt;

            temp = temp->next;
            cnt++;
        }

        temp = head;
        Node* clone = dummy->next;

        while(temp != NULL)
        {
            int randInd = temp->random != NULL ? orgmpp[temp->random] : -1;
            clone->random = randInd != -1 ? clonempp[randInd] : NULL;

            temp = temp->next;
            clone = clone->next;
        }

        return dummy->next;

    }
};