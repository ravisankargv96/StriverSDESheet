/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
int maxPathSumR(TreeNode* root, int& diamaxi)
{
    //
    if(root == NULL)
    {
        return 0;
    }

    int left = maxPathSumR(root->left,diamaxi);
    int right = maxPathSumR(root->right,diamaxi);

    diamaxi = max((max(left,0) + max(right,0) + root->val),diamaxi);

    return root->val + max(max(left,right),0);
}

class Solutions.Solution {
public:
    int maxPathSum(TreeNode* root) {

        int diamaxi = INT_MIN;
        int PathSum = maxPathSumR(root,diamaxi);

        return diamaxi;

    }
};